{{define "base"}}
    <!doctype html>
    <html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Booking page</title>
        <link rel="stylesheet"  href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.2/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
        {{block "css" .}}

        {{end}}
    </head>

    <body>
       <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="#">Navbar</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNavDropdown">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="/">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/about">About</a>
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Rooms
                            </a>
                            <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                                <li><a class="dropdown-item" href="/generals">General's Quarters</a></li>
                                <li><a class="dropdown-item" href="/majors">Major's site</a></li>
                            </ul>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/search-availability">Book Now</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/contact">Contact</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
      {{block "content".}}

      {{end}}
    <footer class="my-footer">
        <div class="row">
            <div class="col">
                left
            </div>

            <div class="col">
                center
            </div>

            <div class="col">
                right
            </div>
        </div>
    </footer>

      {{block "js".}}
      {{end}}

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.1.2/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.min.js"></script>
        <script>
                let attention = Prompt();

                (function () {
                    'use strict';
                    window.addEventListener('load', function () {
                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        let forms = document.getElementsByClassName('needs-validation');
                        // Loop over them and prevent submission
                        Array.prototype.filter.call(forms, function (form) {
                            form.addEventListener('submit', function (event) {
                                if (form.checkValidity() === false) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                }
                                form.classList.add('was-validated');
                            }, false);
                        });
                    }, false);
                })();


                function notify(msg, msgType) {
                    notie.alert({
                        type: msgType,
                        text: msg,
                    })
                }

                function notifyModal(title, text, icon, confirmationButtonText) {
                    Swal.fire({
                        title: title,
                        html: text,
                        icon: icon,
                        confirmButtonText: confirmationButtonText
                    })
                }

                function Prompt() {
                    let toast = function (c) {
                        const{
                            msg = '',
                            icon = 'success',
                            position = 'top-end',

                        } = c;

                        const Toast = Swal.mixin({
                            toast: true,
                            title: msg,
                            position: position,
                            icon: icon,
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })

                        Toast.fire({})
                    }

                    let success = function (c) {
                        const {
                            msg = "",
                            title = "",
                            footer = "",
                        } = c

                        Swal.fire({
                            icon: 'success',
                            title: title,
                            text: msg,
                            footer: footer,
                        })

                    }

                    let error = function (c) {
                        const {
                            msg = "",
                            title = "",
                            footer = "",
                        } = c

                        Swal.fire({
                            icon: 'error',
                            title: title,
                            text: msg,
                            footer: footer,
                        })

                    }

                    async function custom(c) {
                        const {
                            msg = "",
                            title = "",
                        } = c;

                        const { value: formValues } = await Swal.fire({
                            title: title,
                            html: msg,
                            backdrop: false,
                            focusConfirm: false,
                            showCancelButton: true,
                            willOpen: () => {
                                const elem = document.getElementById("reservation-dates-modal");
                                const rp = new DateRangePicker(elem, {
                                    format: 'yyyy-mm-dd',
                                    showOnFocus: true,
                                })
                            },
                            didOpen: () => {
                                document.getElementById("start").removeAttribute("disabled");
                                document.getElementById("end").removeAttribute("disabled");
                            },
                            preConfirm: () => {
                                return [
                                    document.getElementById('start').value,
                                    document.getElementById('end').value
                                ]
                            }
                        })

                        if (formValues) {
                            Swal.fire(JSON.stringify(formValues))
                        }
                    }

                    return {
                        toast: toast,
                        success: success,
                        error: error,
                        custom: custom,
                    }
                }

            </script>
    </body>
    </html>
{{end}}